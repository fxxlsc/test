define(function(require){
	var $ = require("jquery");
	var xmlUtil = require('$UI/system/lib/base/xml');
	var justep = require("$UI/system/lib/justep");
	/*-------------------------------引入：xCloudService.js start 20160612------------------------------------------*/
	var ideService = require("../../common/IDEService");
	var xCloudService = ideService.getXCloudService();
//	var quickAppService = ideService.getQuickAppService();
	var MsgDialog = require("$UI/system/components/justep/messageDialog/messageDialog");
	/*-------------------------------引入：xCloudService.js end   20160612------------------------------------------*/
	
 
	
	var resourceTreeView = function(config){
	    this.init(config);
	};
	resourceTreeView.prototype = {
			init:function(config){
				var self = this,searchTimer;
				this.isInit = true;
				
				this.mainModel = config.mainModel;
				this.$treeDom = $(config.treeDom);
				
				if(config.data){ 
					this.initPageTree(config.data,this.$treeDom);					
				}else if(config.filePath){
					this.loadFileTree(config.filePath);
				}
				/*鼠标移入移除样式设置*/
				this.$treeDom.parent().on("mouseover","li",function(){
					//if($(this).hasClass("page-li")){
						if($(this).css("backgroundColor") != "rgb(210, 210, 210)"){
							$(this).css("backgroundColor","#fffae0");
						}
					//}
				});
				
				this.$treeDom.parent().on("mouseout","li",function(){
					if($(this).css("backgroundColor") != "rgb(210, 210, 210)"){
						$(this).css("backgroundColor","#FFF");
					}
				});
				
				/*点击事件：展开收缩样式设置*/
				this.$treeDom.parent().on("click",".group-li",function(){
					var $this = $(this);
					if($this.find(".according-select i").hasClass("linear-chevrondown")){//volumehigh
						  $this.find(".according-select i").addClass("linear-chevronup")
				    	  $this.find(".according-select i").removeClass("linear-chevrondown");
				    	  $this.closest("ul").find("ul").css("display","none");
				      }else{
				    	  $this.find(".according-select i").addClass("linear-chevrondown")
				    	  $this.find(".according-select i").removeClass("linear-chevronup");
				    	  $this.closest("ul").find("ul").css("display","block");
				      }
				});
				
				/*删除*/
				this.$treeDom.parent().on("click",".delBtn",function(event){
					event.stopPropagation();
					var $this = $(this);
					if (!self.msg)
						self.msg = new MsgDialog({
							parentNode : self.mainModel.getElementByXid("panel1")
					});
					self.msg.on('onClose', function(event) {
						if(event.button == 'ok'){
							var key = $this.closest("li").attr("key");
							var isFile = $this.closest("li").attr("file");
							self.deleteFile(isFile,key);
						}
					}, self);
					
					self.msg.show({
						type : 'OKCancel',
						title : '删除',
						message : '确定要删除'+$this.closest(".group-li").text()+'?',
						width : ''
					});
					
				});
				
				//复制
				this.$treeDom.parent().on("click",".copyBtn",function(event){
					event.stopPropagation();
					var $this = $(this);
					var key = $this.closest("li").attr("key");
					var parentPath = key.substring(0,key.lastIndexOf("/"));
					var isFile = $this.closest("li").attr("file");
					var name = $this.closest("li").text();
					
					self.mainModel.comp("addPageAndGroup").set({
						"title" : "复制文件"
					});
					self.mainModel.comp("addPageAndGroup").open({
						params : {
							"operator" : "copy",
							"key":key,
							"parentPath" : parentPath,
							"isFile" : isFile,
							"name" : name
						}
					});			
				});
	
				//重命名
				this.$treeDom.parent().on("click",".editBtn",function(event){
					event.stopPropagation();
					var $this = $(this);
					var key = $this.closest("li").attr("key");
					var name = $this.closest("li").text();
					self.mainModel.editBtnClick(key,name);
				});
				
				/*-------------------------------------------------文件的点击事件 lss 20161013 start---------------------------------------------*/
				this.$treeDom.parent().on("click","li",function(){
					if($(this).attr("file") == "true"){
						$(self.$treeDom).find("li").css("background-color","#FFF");
						$(this).css("background-color","#d2d2d2");
						var key = $(this).attr("key");
						var canOpen = $(this).attr("canOpen");
						if(canOpen === "false"){
							justep.Util.hint("该页面不支持打开！",{type : "warning"});
							return;
						}
						self.mainModel.openPage(key);
					}
				});
				/*-------------------------------------------------文件的点击事件 lss 20161013 end---------------------------------------------*/
				
				/*-------------------------------------------------文件的发布为单页模板事件 lss 20161108 start---------------------------------------------*/
				this.$treeDom.parent().on("click",".pageReleaseBtn",function(){
					var $this = $(this);
					var key = $this.closest("li").attr("key");
					var name = $this.closest("li").text();
					self.mainModel.comp("produceTemp").open({params : {"tag":"page","path" :key,"name":name}});
				});
				/*-------------------------------------------------文件的发布为单页模板事件 lss 20161108 end---------------------------------------------*/
				
				this.menuBuilder = config.menuBuilder;
				
				this.menuConfig = config.menuConfig;
			},
			
			isDir:function(path){
				
			},
			
			filterNodes:function(value){
				var $list = this.$treeDom.find(".page-li");
				$list.each(function(){
					var $this = $(this);
					var text = $this.find(".page-title span").text();
					if(text && value && text.toLowerCase().indexOf(value.toLowerCase()) !=-1){
						$this.show();
					}else if(!value){
						$this.show();
					}else{
						$this.hide();
					}
				});
			},
			
			clearFilter:function(){
				if(this.tree){
					this.tree.clearFilter();
				}
			},
			
			clear:function(){
				if(this._isInit){
					this.$treeDom.fancytree();
				}
			},
			
			/**
			 * 根据文件路径加载资源树
			 */
			loadFileTree:function(filePath){
				var nodes = xCloudService.getFileTree({filePath:filePath,extName:"m,xml,w,html"});
				this.initPageTree(this.$treeDom,nodes);
			},
			
			/**
			 * 获取当前选中的文件或者文件夹路径
			 */
			getSelection:function(){
				
			},
 
			getSelectionNode:function(){
				var tree = this.$treeDom.fancytree("getTree");
			    var node = tree.getActiveNode();
			    return node;
			},
			
			/**
			 * 添加目录
			 */
			addDir:function(name){
				var parentPath = ideService.getAppPath();
				var self = this;
				this.mainModel.callService("createDir",{parentPath:parentPath,label:name},function(result){
					var filePath = result.filePath; 
					var parentNode = $(self.mainModel.getElementByXid("pageManager"));
					self.mainModel.addNode(parentNode, self.addDirHtml(filePath,false,name));
				});
//				var self = this;
//				xCloudService.createDir({parentPath:parentPath,label:name},function(result){
//					var filePath = result.filePath;
//					var parentNode = $(self.mainModel.getElementByXid("pageManager"));
//					self.mainModel.addNode(parentNode, this.addDirHtml(filePath,false,name));
//				});

			},
			
			/**
			 * 重命名
			 */
			reName:function(filePath,newName){
				var self = this;
				this.mainModel.callService("reName",{filePath:filePath,label:newName},function(result){
					$(self.mainModel.getElementByXid("pageManager")).find('li[key="'+filePath+'"]').find("span").text(newName)
				});
//				xCloudService.reName({filePath:filePath,newName:newName});
//				$(self.mainModel.getElementByXid("pageManager")).find('li[key="'+filePath+'"]').find("span").text(newName)
			},
			
			/**
			 * 添加文件
			 */
			addFile:function(name,parentPath,filePath){ 
				var self = this;
				var parentNode = $(self.mainModel.getElementByXid("pageManager")).find('li[key="'+parentPath+'"]').parent().find("ul");
				parentNode.parent().children("li").find(".according-select i").addClass("linear linear-chevrondown");
				parentNode.parent().children("li").find(".according-select i").removeClass("linear linear-chevronup");
				parentNode.css("display","block");
			    if(parentNode.length == 0){
			    	var pNode = $(self.mainModel.getElementByXid("pageManager")).find('li[key="'+parentPath+'"]').parent();
			    	pNode.append('<ul class="page-ul"></ul>');
			    	parentNode = pNode.find("ul");
			    }
			    self.mainModel.addNode(parentNode, self.fillPageHtml(filePath,true,name));
				
			    self.mainModel.callService("updateLabel",{filePath:filePath,label:name});
			    self.mainModel.openPage(filePath);
				
			},
			
			
			/**
			 * 复制文件
			 */
			copyFile:function(isFile,filePath,parentPath,label){
				if(isFile == "true"){
					var newFilePath = this.mainModel.callService("copyFile",{name:name,parentFilePath:parentPath,filePath:filePath,label:label});
					var parentNode = $(self.mainModel.getElementByXid("pageManager")).find('li[key="'+parentPath+'"]').parent().find("ul");
					var str= this.fillPageHtml(newFilePath.filePath,true,label);
					this.mainModel.addNode(parentNode, str);
				}else{
					
				}
			},
			
			/**
			 * 删除文件，包含文件夹和文件
			 */
			deleteFile:function(flag,filePath){
			    if(flag == "true"){
					xCloudService.deleteFile({filePath:filePath});
					$(self.mainModel.getElementByXid("pageManager")).find('li[key="'+filePath+'"]').remove();
				}else{
					xCloudService.deleteFolder({filePath:filePath});
					$(self.mainModel.getElementByXid("pageManager")).find('li[key="'+filePath+'"]').parent().remove();
				}
				
			},
			
			addDirHtml:function(key,flag,name){
				return '<ul class="group-ul">'+this.fillGroupHtml(key,flag,name)+'</ul>'
			},
			
			/*
			 * 页面中填充内容：文件夹
			 * lss 20160908
			 * */
			fillGroupHtml:function(key,flag,name,fileMode){
				fileMode = fileMode ||"";
				var str = '<li class="group-li" key="'+key+'" file='+flag+' name="'+name+'" filemode="'+fileMode+'">'+
							'<div class="group-title">'+
								'<div class="vertical-timeline-icon">'+
									'<i class="icon-android-folder"/>'+
								'</div>'+
								'<div xid="div12" class="pull-left" style="margin-left:10px;">'+
									'<span>'+name+'</span>'+
								'</div>'+
							'</div>';
							str +='<div class="vertical-timeline-icon according-select pull-right" xid="div16">'+
				'<i class="linear linear-chevrondown" xid="i11"/>'+
				'</div>';
							
							
						 str+='</li>';
				return str;			
			},
			
			/*
			 * 页面中填充内容：文件
			 * lss 20160908
			 * */
			fillPageHtml:function(key,flag,name,fileMode,canOpen){
				fileMode = fileMode ||"";
				var str = '<li class="group-li page-li" key="'+key+'" file='+flag+' name='+name+' filemode="'+fileMode+'" canOpen="'+canOpen+'">'+
							'<div class="group-title page-title" style="width:80%">'+
								//'<div xid="div12" style="float:left;">'+
									'<i class="icon-document" style="font-size: 24px;margin-right: 10px;"/> <span>'+name+'</span>'+
								//'</div>'+
							'</div>'+
						 '</li>';
				return str;			
			},
			
			initPageTree : function(jsonData,root){
				var self = this;
				self.path = null; 
				var $navTree = this.$treeDom;
				var jsonData = jsonData[0];
				var device = this.mainModel.currentDevice || 'm';
				var sortConfig = null;
				//支持preview在发布后运行
				//if (justep.Util.getGlobalValue("cloudx5.config")){
					var filePath = this.mainModel.appPath+"/.sortConfig";
					var result = xCloudService.getFileContent({filePath:filePath});
					sortConfig = result.content;
					if(sortConfig){
						sortConfig = eval("("+sortConfig+")");
					}
//				}else{
//					sortConfig = {};
//				}
				if(jsonData.children){
				    var groupList = jsonData.children;
				    var strHtml = '';
				    var defaultGroup = '';
				    groupList.sort(function(a,b){
				    	if(a.key.indexOf("/main.w")>-1){//main.w总是排在最前面
				    		return -1;
				    	}else if(b.key.indexOf("/main.w")>-1){
				    		return 1;
				    	}
				    	var idx1 = sortConfig[a.key]||-1;  
				    	var idx2 = sortConfig[b.key]||-1;
				    	return idx1-idx2;
				    });
				    var appType = this.mainModel.getContext().getRequestParameter("apptype");
					for(var i = 0;i<groupList.length;i++){
						var groupCurrent = groupList[i];
						if(groupCurrent.flag){// true：文件  false：文件夹
							self.defaultKey = groupCurrent.key.substring(0,groupCurrent.key.lastIndexOf("/"));
							if(groupCurrent.fileMode === device){
								if(appType!="3" && (groupCurrent.key.indexOf('/index.w')!=-1)){
									continue;
								}
								defaultGroup += self.fillPageHtml(groupCurrent.key,groupCurrent.flag,groupCurrent.title,groupCurrent.fileMode,groupCurrent.canOpen);								
							}
						}else{
							if((groupCurrent.title != "images") && (groupCurrent.title != "css") && (groupCurrent.title != "js")){
								if(groupCurrent.fileMode === device)
								strHtml += '<ul class="group-ul">'+ self.fillGroupHtml(groupCurrent.key,groupCurrent.flag,groupCurrent.title);				
								var pageList = groupCurrent.children;
								if(pageList){
									pageList.sort(function(a,b){
								    	var idx1 = sortConfig[a.key]||-1;  
								    	var idx2 = sortConfig[b.key]||-1;
								    	return idx1-idx2;
								    });
								    strHtml += '<ul class="page-ul">';
									for(var j = 0;j<pageList.length;j++){
									  var pageCurrent = pageList[j]; 
										if(pageCurrent.fileMode == 'm' &&  (pageCurrent.key.indexOf('/index.w')!=-1)){
											continue;
										}
									  if(pageCurrent.children){
										  var children1 = pageCurrent.children;
										  for(var n = 0;n<children1.length;n+=1 ){
											  var item = children1[n];
											  if(item && !item.children){
												  if(groupCurrent.fileMode === device)
												  strHtml += self.fillPageHtml(item.key,item.flag,pageCurrent.title+"/"+item.title,pageCurrent.fileMode);														  
											  }
										  }
									  }else{
										  if(groupCurrent.fileMode === device)
										  strHtml += self.fillPageHtml(pageCurrent.key,pageCurrent.flag,pageCurrent.title,pageCurrent.fileMode);									  
									  }
									}
									strHtml += '</ul>';
								}
								strHtml += '</li></ul>';
							}
						}
					}
					var defaultPath = ideService.getAppPath();
					var defaultGroupTitle= '<ul class="group-ul">'+ self.fillGroupHtml(defaultPath,false,"默认")+'<ul>';
					self.mainModel.addNode(root, defaultGroupTitle + defaultGroup+"</ul></ul>" + strHtml);
				}
				
			}
			
	}
	return resourceTreeView;
});
